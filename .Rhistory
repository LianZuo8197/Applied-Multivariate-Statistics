knitr::opts_chunk$set(echo = TRUE,results=F, message = F, warning = F, fig.show = "nohide", comment="")
#read the BearGrowth data
setwd("/Users/lianzuo/Lian Zuo/STAT-EMU/Fall 2023/577- Fall 2023/data-577")
#read the BearGrowth data
setwd("D:/LianZuo/Applied Statistics Course Materials/STAT 577 - Applied Multivariate Statistics/data-577")
BearGrowth <- read.table("BearGrowth.dat")
#rename the colnames
colnames(BearGrowth) <-c("weght1","weight2","weight3","weight4","length1","length2","length3","length4")
BearGrowth <- BearGrowth[,5:8]
# the null hypothesis is u=[145,165,195,190]'
# using the Hotelling's Test
HotellingsT2(BearGrowth,mu=c(145,165,195,190),test = "f")
library(mvtnorm)
library(ICS)
library(ICSNP)
HotellingsT2(BearGrowth,mu=c(145,165,195,190),test = "f")
t.test(BearGrowth[,1],mu=145, alt="t", conf.level = 1-0.05/4)
t.test(BearGrowth[,2],mu=165, alt="t", conf.level = 1-0.05/4)
t.test(BearGrowth[,3],mu=195, alt="t", conf.level = 1-0.05/4)
t.test(BearGrowth[,4],mu=190, alt="t", conf.level = 1-0.05/4)
?t.test
setwd("D:/LianZuo/Applied Statistics Course Materials/STAT 577 - Applied Multivariate Statistics/data-577")
CLEP <- read.table("CollegeTest.DAT")
colnames(CLEP) <- c("X1","X2",'X3')
HotellingsT2(CLEP,mu=c(500,50,30),test = "f")
nrow(CLEP)
t.test(CLEP[,1],mu=500, alt="t", conf.level = 1-0.05/3)
t.test(CLEP[,2],mu=50, alt="t", conf.level = 1-0.05/3)
t.test(CLEP[,3],mu=30, alt="t", conf.level = 1-0.05/3)
# c)
## qqplot for varibale X1
qqnorm(CLEP$X1,main = "QQ Plot for variable X1", xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(CLEP$X1,col="red")
## qqplot for varibale X2
qqnorm(CLEP$X2,main = "QQ Plot for variable X2", xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(CLEP$X2,col="green")
## qqplot for varibale X3
qqnorm(CLEP$X3,main = "QQ Plot for variable X3", xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(CLEP$X3,col="blue")
# d)
shapiro.test(CLEP$X1)
shapiro.test(CLEP$X2)
shapiro.test(CLEP$X3)
library(mvnormtest)
mshapiro.test(t(CLEP))
x <- seq(0,30,0.01)
x
30/0.01
x <- seq(0,30,0.01)
chix=dchiq(x,3)
chix <- dchisq(x,3)
plot(x,chix,type='l'.col=2,lwd=1,xlab="x",ylab='Chisquared density',main='Chisquared density curves')
plot(x,chix,type='l',col=2,lwd=1,xlab="x",ylab='Chisquared density',main='Chisquared density curves')
plot(x, chx,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
plot(x, chix,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
line(x, chix,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
x=seq(0,30,0.01)#generating 31 values spaced by 0.01
chx=dchisq(x,3)
line(x, chx,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
lines(x, chx,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
lines(x, chx,  type="l", col=2, lwd=1)
plot(x, chx,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
lines(x, dchisq(x,5), type="l", col=3, lwd=2)
plot(x, dchisq(x,5), type="l", col=3, lwd=2)
lines(x, dchisq(x,10), type="l", col=4, lwd=3)
?plot
points(x, dchisq(x,15), type="l", col=5, lwd=4)
points(x, dchisq(x,15), type="p", col=5, lwd=4)
points(x, dchisq(x,15), type="p", col=5, lwd=4)
plot(x,chix,type='l',col=3,lwd=3,xlab="x",ylab="chisquared density",main="chisquared density curves",xlim=c(0,30),ylim=c(0,0.3))
lines(x,dchisq(x,5),type = "l",col=2,lwd=2)
lines(x,dchisq(x,10),type = "l",col=4,lwd=4)
lines(x,dchisq(x,15),type="l",col=5,lwd=5)
lines(x,dchisq(x,20),type="l",col=6,lwd=6)
text(c(3,5,10,15,20),c(0.25,0.15,0.1,0.8,0.7),labels = c("3 df",'5 df','10 df','15 df','20 df'),col=c(3,2,4,5,6),cex=1.4)
text(c(3,5,10,15,20),c(0.25,0.15,0.1,0.08,0.07),labels = c("3 df",'5 df','10 df','15 df','20 df'),col=c(3,2,4,5,6),cex=1.4)
legend(25,0.25,col = 2,cex=4,pch=16)
legend(25,0.25,col=2,cex=4,pch=16)
legend(25,0.25,col=c(3,2,4,5,6))
legend(25,0.25,c("3 df", "5 df", "10 df", "15 df"),col=c(3,2,4,5,6))
legend(25,0.25,c("3 df", "5 df", "10 df", "15 df"),col=c(3,2,4,5,6),pch = c(5,6,7,8,9))
head(ChickWeight)
chick.wt <- ChickWeight$weight
boxplot(chick.wt,vertical=T,main="boxplot for chick weight")
boxplot(chick.et,horizontal=T,main="Boxplot for chick weight")
boxplot(chick.wt,horizontal=T,main="Boxplot for chick weight")
Quiz1<-c(16, 13, 11, 9, 18, 12, 11, 19, 25,41)
Quiz2<-c(20, 14, 8, 13, 12, 17, 15, 14)
boxplot(Quiz1,Quiz2,main='Side by Side boxplots for comparison',col=c("grey","green"),vertical=T,border = c("brown","lightblue"))
boxplot(Quiz1,Quiz2,main='Side by Side boxplots for comparison',col=c("grey","green"),vertical=T,border = c("brown","lightblue"),xla="Quiz number",ylab="quiz scores",xlim=c(0,10),names = c("quiz1",'quiz2'))
boxplot(Quiz1,Quiz2,main='Side by Side boxplots for comparison',col=c("grey","green"),vertical=T,border = c("brown","lightblue"),xla="Quiz number",ylab="quiz scores",,names = c("quiz1",'quiz2'))
boxplot(Quiz1,Quiz2,main='Side by Side boxplots for comparison',col=c("grey","green"),vertical=T,border = c("brown","lightblue"),xla="Quiz number",ylab="quiz scores",names = c("quiz1",'quiz2'))
boxplot(Quiz1,Quiz2,main='Side by Side boxplots for comparison',col=c("grey","green"),vertical=T,border = c("brown","lightblue"),xla="Quiz number",ylab="quiz scores",names = c("quiz1",'quiz2'),boxwex=0.8)
boxplot(Quiz1,Quiz2,main='Side by Side boxplots for comparison',col=c("grey","green"),vertical=T,border = c("brown","lightblue"),xla="Quiz number",ylab="quiz scores",names = c("quiz1",'quiz2'),boxwex=0.4)
knitr::opts_chunk$set(echo = TRUE, comment = "")
Quiz1<-c(16, 13, 11, 9, 18, 12, 11, 19, 25,41)
Quiz2<-c(20, 14, 8, 13, 12, 17, 15, 14)
boxplot(Quiz1, Quiz2, main="Side-by-side Boxplots for Comparison",
col=c("grey", "green"), border=c("brown","blue"), horizontal = F,
ylab="Quiz scores", xlab="Quiz number", names=c("Quiz 1", "Quiz 2"), boxwex=0.5)
ChickWeight$Diet
names(ChickWeight$Diet)
table(ChickWeight$Diet)
attach(ChickWeight)
boxplot(weight~Diet)
boxplot(weight~Diet，col=2:5,names=c("diet1","diet2","diet3","diet4"),boxwex=0.5,main="Boxplot by diet")
boxplot(weight~Diet，col=2:5,names=c("diet1","diet2","diet3","diet4"),boxwex=0.5)
boxplot(weight~Diet,names=c("diet1","diet2","diet3","diet4"),boxwex=0.5)
head(swiss)
names(swiss)
attach(swiss)
names(swiss)
attach(swiss)
n=nrow(swiss)
n
install.packages("MVA")
library(tools)
library(HSAUR2)
library(MVA)
bvbox(cbind(Agriculture,Examination),xlab="Agriculture",ylab="examination",pch=16,cex=1,col=1)
out=match(sort(Examination[(n-1),n],Examination))
out=match(sort(Examination)[(n-1):n],Examination)
sort(Examination)
sort(Examination)[(n-1),n]
sort(Examination)[c((n-1),n)]
sort(Examination)[(n-1):n]
match(sort(Examination)[(n-1):n],Examination)
out=match(sort(Examination)[(n-1):n],Examination)
Examination
swiss[c(42,45),2:3]
out=match(sort(Examination)[(n-1):n],Examination)
out
swiss[out,2:3]
bvbox(cbind(Agriculture,Examination), xlab="Agriculture", ylab="Examination",
pch = 16, cex = 0.7, col = 1)
text(Agriculture[out],Examination[out],labels=c("Neuchatel","V.De Geneve"),cex=0.5,col=c(3,4),pos = c(1,4))
text(Agriculture[out],Examination[out],labels=c("Neuchatel","V.De Geneve"),cex=0.5,col=c(3,4))
cor(Agriculture,Examination) #correlation with all data points included
cor(Agriculture[-45],Examination[-45])
mean(Agriculture)
mean(Examination)
colmeans(cbind(Agriculture,Examination))
colMeans(cbind(Agriculture,Examination))
var(Agriculture)
cov(Agriculture,Examination)
cov(cbind(Agriculture,Examination))
cor(cbind(Agriculture,Examination))
detach(swiss)
knitr::opts_chunk$set(echo = TRUE)
x=c(2, 5, 8, 9, 11, 13, 5, 7, 9, 7)
y=c(4, 14, 20, 18, 15, 51, 30, 45, 35, 25)
plot(x,y)
extr=chull(cbind(x,y))#chull() gives the indices of extreme points in each direction
cbind(x[extr], y[extr]) #gives extreme points
extr1 <- c(extr, extr[1])
plot(x,y, pch = 16, col = 2, cex = 1.25, main="Convex hull")
lines(x[extr1], y[extr1], type = "l", col = "blue", lwd = 1)
#install.packages("aplpack") #aplpack stands for another plot package
library(aplpack)
set.seed(1234)
age=rnorm(20, 50, 2) # 20 random values from N(50,2)
weight=rnorm(20, 110, 3)
height=70*runif(20, 1,2)# 20 values from U(1,2) multiplied by 70
bp= rnorm(20, 122, 2)
data=round(data.frame(age, weight, height, bp), digits=2)
faces(data, main="Chernoff Faces")
#As many as 18 variables can be described using different face features
in.max.wt=match(max(weight), weight)#gives the index of first value in the second
in.max.wt
b <- c(3,0,5,10)
print(b)
x <- seq(1,8,2)
print(x)
y <- -2:5
y
m <- matrix(2:17,nrow=4,ncol=4)
m
m2 <- matrix(1:16,nrow=4,ncol=1,byrow = T)
m2
m2 <- matrix(1:16,nrow=4,ncol=4,byrow = T)
m2
m2[2,]
m2[,3]
m2[2,3]
m2[3,2:4]
diag(3,4,4)
diag(3)
diag(5)
diag(1:5)
diag(m2)
set.seed(123)
A=matrix(runif(9,0,1),3,3)
A
B=matrix(rnorm(9,0,1),3,3)
B
A*B
A%*%B
b=c(2,-1,2)
solve(A,b)
d1=det(A)
d1
solve(A)
A %*%solve(A)
solve(A)%*%A
diag(A)
sum(diag(A))
eigen(A)
eigen(A)$values
eigen(A)$vectors
trace(A)
prod(eigen(A)$values)
det(A)
sum(eigen(A)$values)
sum(diag(A))
z=matrix(1:6, 3, 2)
A=t(z)%*%z
z
A
eigen(A)$values
eigen(A)$vectors
names(trees)
dim(trees)
colMeans(trees)
cov(trees)
head(trees)
n
nrow(trees)
colMeans(trees)
a=colMeans(trees)
trees[1,]-a
b=trees[1,]-a
t(b)
t(b)%*% solve(cov(trees))%*% b
x=cov(trees)
solve(x)
y=solve(x)
t(b)%*%y
z=t(b)
z%*%y
b%*%y
knitr::opts_chunk$set(echo = TRUE)
n=nrow(trees)
mhd.trees=mahalanobis(trees, smean, scov)
names(trees)
dim(trees)
smean=colMeans(trees)
scov=cov(trees)
print(list(smean, scov))
n=nrow(trees)
mhd.trees=mahalanobis(trees, smean, scov)
mhd.trees
theo.quan=qchisq(ppoints(n),3) #df=number of variables = 3
qqplot(theo.quan, mhd.trees, xlab="Theoretical quantiles",        ylab="Mahalanobis distances", pch=16, col=3, main="QQ plot for trees data")
abline(0,1) #drawing reference line
ppoints(n)
?ppoints
head(trees)
head(t(trees))
#install.packages("mvnormtest")
library(mvnormtest)
mshapiro.test(t(trees))
attach(trees)
par(mfrow=c(2,2)) #arrange multiple plots in the same plotting space
hist(Girth, prob = T, col=8) #drawing a relative freq. histogram
x=seq(1, 30, by=.5)
lines(x, dnorm(x,mean(Girth), sd(Girth)), col="darkblue",lwd=0.8)
hist(Height, prob = T, col=11)
x=seq(55, 95, 0.5)
lines(x, dnorm(x, mean(Height), sd(Height)), col="steelblue")
hist(Volume, prob = T, col=12)
x=seq(5, 85, 0.5)
lines(x, dnorm(x, mean(Volume), sd(Volume)), col="gold")
shapiro.test(Girth)
shapiro.test(Height)
shapiro.test(Volume)
detach(trees)
knitr::opts_chunk$set(echo = TRUE)
names(trees)
dim(trees)
smean=colMeans(trees)
scov=cov(trees)
print(list(smean, scov))
n=nrow(trees)
mhd.trees=mahalanobis(trees, smean, scov)
index=which(mhd.trees>12.24)#gives the observation number for which the mahalanobis distance is greater than 12.24
index
mhd.trees[index]
chisq.c=qchisq(0.95, 3, lower.tail=T)
out=which(mhd.trees>chisq.c)
out
mhd.trees[out]
theo.quan=qchisq(ppoints(n),3) #df=number of variables = 3
qqplot(theo.quan, mhd.trees, xlab="Theoretical quantiles", ylab="Mahalanobis distances", pch=16, col=3, main="QQ plot for trees data")
abline(0,1) #drawing reference line
dim(iris)
mean.iris=colMeans(iris[, 1:4])
cov.iris=cov(iris[,1:4])
mhd.iris=mahalanobis(iris[,1:4],mean.iris, cov.iris)
which(mhd.iris>19.51)
which(mhd.iris>qchisq(0.975, 4, lower.tail = T))
t.q=qchisq(ppoints(nrow(iris)), 4)
qqplot(t.q, mhd.iris, xlab="Theoretical quantiles", ylab="Mahalanobis distance", main="QQ plot for iris data", ylim=c(0, 14))
knitr::opts_chunk$set(echo = T, results=T, message = F, warning = F, fig.show = "nohide", comment="")
setwd("D:/LianZuo/Applied Statistics Course Materials/STAT 577 - Applied Multivariate Statistics/data-577")
PT=read.table("Psychological tests.DAT", header=F)
colnames(PT)=c("gender", "t1","t2", "t3", "t4")
gender=as.factor(PT$gender)
#install.packages("heplots")
library(car)
library(carData)
library(heplots)
boxM(PT[, 2:5],PT[, 1])
#or, boxM(PT[, c("t1","t2", "t3", "t4")], PT[, "gender"])
nrow(GT)
nrow(gt)
nrow(PT)
ncol(PT)
colnames(PT)
rownames(PT)
library(car)
library(carData)
library(heplots)
boxM(PT[,2:5],PT[,1])
x <- boxM(PT[,2:5],PT[,1])
summary(x)
names(iris)
result <- boxM(iris[,1:4],iris[,5])
result
nrow(iris)
head(swiss)
x <- swiss[,2:4]
head(x)
t.test(x[,1],mu=51)
t.test(x[,2],mu=16)
t.test(x[,3],mu=11)
library(mvtnorm)
library(ICS)
library(ICSNP)
HotellingsT2(x,mu=c(51,16,11),tet="f")
nrow(swiss)
47-3
set.seed(12)
x=rmvnorm(10, mean=c(3, 2), sigma=matrix(c(2,.5,.5,1), nrow=2,ncol=2))
#print(x)
y=rmvnorm(20, mean=c(5, 6), sigma=matrix(c(2,.5,.5,1), nrow=2,ncol=2))
#print(y)
x
y
with(PT,HotellingsT2(cbind(t1,t2,t3,t4)~gender))
HotellingsT2(cbind(t1,t2,t3,t4)~gender)
library(ICSNP)
gender=as.factor(PT$gender)
with(PT,HotellingsT2(cbind(t1,t2,t3,t4)~gender))
HotellingsT2(cbind(t1,t2,t3,t4)~gender)
attach(PT)
HotellingsT2(cbind(t1,t2,t3,t4)~gender)
knitr::opts_chunk$set(echo = TRUE)
ci=array(0,c(4,2))
for (i in 2:5){
result=t.test(PT[,i]~gender,conf.level =1-0.05/4, alt="t")
ci[i-1,]=result$conf.int
}
print(ci)
