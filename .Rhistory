x <- seq(0,30,0.01)
x
chi=dchisq(x,3)
plot(x,chi,type="l",col=2,lwd=1)
xlab="x"
ylab="Chisquared density"
plot(x,chi,type="l",col=2,lwd=1,xlab="x"
ylab="Chisquared density",main="Chisquared density curves",xlim=c(0,30),ylim=c(0,0.3))
plot(x,chi,type="l",col=2,lwd=1,xlab="x",
ylab="Chisquared density",main="Chisquared density curves",xlim=c(0,30),ylim=c(0,0.3))
lines(x,dchisq(x,5),type="l",col=3,lwd=2)
lines(x,dchisq(x,5),type="l",col=3,lwd=1)
lines(x,dchisq(x,10),type="l",col=3,lwd=1)
lines(x,dchisq(x,15),type="l",col=4,lwd=3)
lines(x,dchisq(x,20),type="d",col=5,lwd=5)
lines(x,dchisq(x,20),type="l",col=5,lwd=5)
lines(x,dchisq(x,20),type="l",col=5,lwd=5)
plot(x,dchisq(x,20),type="l",col=5,lwd=5)
plotplot(x, chx,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
plot(x, chx,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
x=seq(0,30,0.01)#generating 31 values spaced by 0.01
chx=dchisq(x,3) # density of chisquared distribution with 3 degrees of freedom
plot(x, chx,  type="l", col=2, lwd=1,
xlab="x", ylab="Chisquared density", main="Chisquared density curves",
xlim=c(0,30), ylim=c(0,0.3))
lines(x, dchisq(x,5), type="l", col=3, lwd=2)
lines(x, dchisq(x,10), type="l", col=4, lwd=3)
lines(x, dchisq(x,15), type="l", col=5, lwd=4)
text(c(2,5,10,15),c(0.258,0.17,0.11,0.09),labels=c("3df","5df","10df","15df"),col=2:5,cex=1.5)
legend(25,0.3,c("3df","5df","10df","15df"),col=2:5)
legend(25,0.3,c("3df","5df","10df","15df"),col=2:5,pch=c(16,5,18,20))
legend(25,0.3,c("3df","5df","10df","15df"),col=2:5)
chick.wt <- ChickWeight$weight
boxplot(chick.wt,horizontal=T,main="boxplot for chick weight data")
boxplot(chick.wt,main="boxplot for chick weight data")
quiz1 <- c(16, 13, 11, 9, 18, 12, 11, 19, 25,41)
quiz2 <- c(20, 14, 8, 13, 12, 17, 15, 14)
boxplot(quiz1,quiz2,main="side by side boxplot",col=c("grey","green"),ylab="scores",ylab="number")
boxplot(quiz1,quiz2,main="side by side boxplot",col=c("grey","green"),ylab="scores",ylab="number"border=c("brown","blue"))
boxplot(quiz1,quiz2,main="side by side boxplot",col=c("grey","green"),ylab="scores",xxlab="number"，border=c("brown","blue"))
boxplot(quiz1,quiz2,main="side by side boxplot",col=c("grey","green"),ylab="scores",xlab="number"，border=c("brown","blue"))
boxplot(Quiz1, Quiz2, main="Side-by-side Boxplots for Comparison",
col=c("grey", "green"), border=c("brown","blue"), horizontal = F,
ylab="Quiz scores", xlab="Quiz number", names=c("Quiz 1", "Quiz 2"), boxwex=0.5)
Quiz1<-c(16, 13, 11, 9, 18, 12, 11, 19, 25,41)
Quiz2<-c(20, 14, 8, 13, 12, 17, 15, 14)
boxplot(Quiz1, Quiz2, main="Side-by-side Boxplots for Comparison",
col=c("grey", "green"), border=c("brown","blue"), horizontal = F,
ylab="Quiz scores", xlab="Quiz number", names=c("Quiz 1", "Quiz 2"), boxwex=0.5)
boxplot(Quiz1, Quiz2, main="Side-by-side Boxplots for Comparison",
col=c("grey", "green"), border=c("brown","blue"), horizontal = F,
ylab="Quiz scores", xlab="Quiz number", names=c("Quiz 1", "Quiz 2"))
boxplot(Quiz1, Quiz2, main="Side-by-side Boxplots for Comparison",
col=c("grey", "green"), horizontal = F,
ylab="Quiz scores", xlab="Quiz number", names=c("Quiz 1", "Quiz 2"))
names(ChickWeight)
boxplot(weight~Chick, data=ChickWeight, horizontal = F, col=c("green", "yellow", "blue"), names=c("Diet 1", "Diet 2",  "Diet 4"), boxwex=0.5)
boxplot(weight~Diet, data=ChickWeight, horizontal = F, col=c("green", "yellow", "red", "blue"), names=c("Diet 1", "Diet 2", "Diet 3", "Diet 4"), boxwex=0.5)
chick.wt<-ChickWeight$weight
hist(chick.wt, main="Histogram for chick weight", col=3, xlab="Weight in pound", ylab="Frequency", labels = T, xlim=c(0,450), ylim=c(0,250))
chick.wt<-ChickWeight$weight
hist(chick.wt, main="Histogram for chick weight", col=3, xlab="Weight in pound", ylab="Frequency", xlim=c(0,450), ylim=c(0,250))
head(swiss)
names(swiss)
attach(swiss)
n=nrow(swiss)
n
#install.packages("MVA")
library(tools)
library(HSAUR2)
install.packages("MVA")
knitr::opts_chunk$set(echo = TRUE, comment = "")
library(tools)
library(HSAUR2)
library(MVA)
bvbox(cbind(Agriculture,Examination))
boxplot(Agriculture,Examination)
bvbox(cbind(Agriculture,Examination),pch=16,cex=1)
bvbox(cbind(Agriculture,Examination),pch=16,cex=1,col=1)
bvbox(cbind(Agriculture,Examination),pch=16,cex=1,col=2)
sort(Examination)[(n-1):n]
(Examination)[(n-1):n]
match(sort(Examination)[(n-1):n],Examination)
sort(Examination)
out=match(sort(Examination)[(n-1):n],Examination)
out
swiss[out,2:3]
bvbox(cbind(Agriculture,Examination), xlab="Agriculture", ylab="Examination",
pch = 16, cex = 0.7, col = 1)
text(Agriculture[out], Examination[out], labels = c("Neuchatel", "V. De Geneve"), cex = 0.5, col=c(3,4), pos = c(1,4))
cor(Agriculture,Examination) #correlation with all data points included
cor(Agriculture[-45],Examination[-45])
mean(Agriculture)
mean(Examination)
#Or
colMeans(cbind(Agriculture,Examination))
knitr::opts_chunk$set(echo = TRUE)
x=c(2, 5, 8, 9, 11, 13, 5, 7, 9, 7)
y=c(4, 14, 20, 18, 15, 51, 30, 45, 35, 25)
plot(x,y)
extr=chull(cbind(x,y))#chull() gives the indices of extreme points in each direction
cbind(x[extr], y[extr]) #gives extreme points
extr1 <- c(extr, extr[1])
plot(x,y, pch = 16, col = 2, cex = 1.25, main="Convex hull")
lines(x[extr1], y[extr1], type = "l", col = "blue", lwd = 1)
attach(swiss)
#extr.swiss=chull(cbind(swiss$Agriculture, swiss$Examination))
extr.s=chull(cbind(Agriculture, Examination))
extr.s=c(extr.s, extr.s[1])
plot(Agriculture, Examination, pch = 16, col = 1, cex = 0.8, main="Convex hull for Agriculture and Examination")
lines(Agriculture[extr.s], Examination[extr.s], type="l", col="red", lwd=1.2)
detach(swiss)
set.seed(123) #initialize a random number generator
x=rnorm(10)#generating 10 random numbers from a standard normal dist
y<-x+1
z=rnorm(10,1,0.2)
d=data.frame(x,y,z)
plot(x,y, xlab="X data", ylab="Y data",
main="Bubble plot for 3D data", pch=16, col="red", cex=0.5)
symbols(d$x, d$y, circles=d$z, inches = 0.1, add = TRUE, lwd = 0.5, fg = "green")
pairs(cbind(Agriculture=swiss$Agriculture, Examination=swiss$Examination, Education=swiss$Education, Fertility=swiss$Fertility), panel=panel.smooth, col="green",gap = 0, lwd = 1, pch = 16, cex = 0.6)
#install.packages("aplpack") #aplpack stands for another plot package
library(aplpack)
install.packages("aplpack")
#install.packages("aplpack") #aplpack stands for another plot package
library(aplpack)
set.seed(1234)
age=rnorm(20, 50, 2) # 20 random values from N(50,2)
weight=rnorm(20, 110, 3)
height=70*runif(20, 1,2)# 20 values from U(1,2) multiplied by 70
bp= rnorm(20, 122, 2)
data=round(data.frame(age, weight, height, bp), digits=2)
faces(data, main="Chernoff Faces")
#As many as 18 variables can be described using different face features
in.max.wt=match(max(weight), weight)#gives the index of first value in the second
in.max.wt
swiss
nrow(swiss)
names(swiss)
attach(swiss)
n=nrow(swiss)
knitr::opts_chunk$set(echo = TRUE, comment = "")
library(MVA)
bvbox(cbind(Agriculture,Examination), xlab="Agriculture", ylab="Examination",
pch = 16, cex = 1, col = 1)
bvbox(Agriculture,Examination)
Agriculture
bvbox(data.frame(Agriculture,Examination))
bvbox(data.frame(Agriculture,Education))
bvbox(data.frame(Agriculture,Education),xlab="Agriculture",ylab="Education",xlim=c(0,100),ylim=c(0,60),main="bi-boxplot",pch=18,cex=2,col="blue")
bvbox(data.frame(Agriculture,Education),xlab="Agriculture",ylab="Education",main="bi-boxplot",pch=18,cex=2,col="blue")
bvbox(data.frame(Agriculture,Education),xlab="Agriculture",ylab="Education",main="bi-boxplot",pch=18,cex=2,col="blue",xlim=c(0,120))
sort(Examination)[n-1,n]
sort(Examination)[(n-1),n]
sort(Examination)
sort(Examination)[n-1:n]
match(2,Examination)
match(31,Examination)
x <- sort(Examination)
x[n-1:n]
n-1
x[46:47]
x[(n-1):n]
x
match(c(35,37),Examination)
#install.packages("MVA")
library(tools)
library(HSAUR2)
library(MVA)
bvbox(cbind(Agriculture,Examination), xlab="Agriculture", ylab="Examination",
pch = 16, cex = 1, col = 1)
bvbox(cbind(Agriculture,Examination), xlab="Agriculture", ylab="Examination",
pch = 16, cex = 1, col = 1)
swiss[c(42,45),2:3]
knitr::opts_chunk$set(echo = T, results=T, message = F, warning = F, fig.show = "nohide", comment="")
setwd("C:/Users/tshapla/Desktop/COURSES/Stat 577/RPrograms")
setwd("D:/LianZuo/Applied Statistics Course Materials/STAT 577 - Applied Multivariate Statistics/data-577")
pottery=read.csv("pottery.csv", header=T)
head(pottery)
library(car)
library(carData)
library(broom)
library(heplots)
boxM(pottery[, 2:5],pottery[, 1])
ncol(pottery)
boxM(pottery[,2:6],pottery[,1])
nrow(pottery)
pottery
knitr::opts_chunk$set(echo = T, results=T, message = F, warning = F, fig.show = "nohide", comment="")
setwd("D:/LianZuo/Applied Statistics Course Materials/STAT 577 - Applied Multivariate Statistics/data-577")
PT=read.table("Psychological tests.DAT", header=F)
colnames(PT)=c("gender", "t1","t2", "t3", "t4")
gender=as.factor(PT$gender)
#install.packages("heplots")
library(car)
library(carData)
library(heplots)
boxM(PT[, 2:5],PT[, 1])
#or, boxM(PT[, c("t1","t2", "t3", "t4")], PT[, "gender"])
head(PT)
nrow(PT)
?boxM
setwd("D:/LianZuo/Applied Statistics Course Materials/STAT 577 - Applied Multivariate Statistics/data-577")
pottery=read.csv("pottery.csv", header=T)
head(pottery)
library(car)
library(carData)
library(broom)
library(heplots)
boxM(pottery[, 2:5],pottery[, 1])
library(mvnormtest)
pottery.res=pottery[, 2:6]
mshapiro.test(t(pottery.res))
library(carData)
library(car)
manova_outputs=manova(cbind(al, fe, mg, ca, na)~site, data=pottery)
summary(manova_outputs)
results=array(0, c(5,2))
for (i in 1:5){
anova=aov(pottery[,i+1]~site, data=pottery)
results[i,]=as.numeric(summary(anova)[[1]][1,4:5])
}
colnames(results)=c("F statistic", "p value")
results
summary(anova
)
summary(anova)[[1]]
summary(anova)[[2]]
